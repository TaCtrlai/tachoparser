# syntax=docker/dockerfile:1

# Build stage
FROM golang:1.19-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /build

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy entire project source code
COPY . .

# Build the API service
WORKDIR /build/cmd/dddapi
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o dddapi .

# Final stage - minimal runtime image
FROM alpine:latest

# Add CA certificates and wget for healthcheck
RUN apk --no-cache add ca-certificates wget

# Create non-root user for security
RUN addgroup -g 1000 appuser && \
    adduser -D -u 1000 -G appuser appuser

WORKDIR /app

# Copy binary from builder
COPY --from=builder /build/cmd/dddapi/dddapi /app/dddapi

# Change ownership to non-root user
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port (default 8080)
EXPOSE 8080

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Run the API
ENTRYPOINT ["/app/dddapi"]
CMD ["-port", "8080"]
